{"version":3,"file":"checkout-a8299711.js","mappings":"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","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/isCheckoutExtensionEnabled.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalConnect.tsx","webpack://checkout/./packages/paypal-connect-integration/src/PoweredByPaypalConnectLabel.tsx","webpack://checkout/./packages/paypal-connect-integration/src/is-braintree-connect-method.ts","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-connect-address.ts","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-commerce-connect-method.ts","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-connect-method.ts","webpack://checkout/./packages/paypal-connect-integration/src/is-paypal-connect-payment-provider-customer.ts","webpack://checkout/./packages/paypal-connect-integration/src/usePayPalConnectAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalConnectSmall.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeConnectTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeConnectTracker,\n    createPayPalCommerceConnectTracker,\n    createStepTracker,\n    PayPalCommerceConnectTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeConnectTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeConnectTrackerService>(createBraintreeConnectTracker, [\n                checkoutService,\n            ]),\n        [checkoutService],\n    );\n    const getPayPalCommerceConnectTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceConnectTrackerService>(\n                createPayPalCommerceConnectTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeConnectTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceConnectTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeConnectTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceConnectTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeConnectTracker().paymentComplete();\n        getPayPalCommerceConnectTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeConnectTracker().walletButtonClick(methodId);\n        getPayPalCommerceConnectTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    isExtensionEnabled: () => boolean;\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\nimport { LocalizedGeography } from '../geography';\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    FormField,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalConnectAddress, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\nimport { IconPayPalConnectSmall } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\nimport isValidAddress from './isValidAddress';\nimport localizeAddress from './localizeAddress';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n    fields?: FormField[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !fields\n        ? !isEmpty(address)\n        : isValidAddress(\n              address,\n              fields.filter((field) => !field.custom),\n          );\n    const shouldShowProviderIcon = isPayPalAxoEnabled && isPayPalConnectAddress(addressWithoutLocalization, paypalConnectAddresses);\n\n    return !isValid ? null : (\n        <div\n            className={classNames(\n                'vcard checkout-address--static',\n                {\n                    'checkout-address--with-provider-icon': shouldShowProviderIcon,\n                }\n            )}\n        >\n            {shouldShowProviderIcon && <IconPayPalConnectSmall />}\n\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { address, type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries, getBillingAddressFields, getShippingAddressFields },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n        fields:\n            type === AddressType.Billing\n                ? getBillingAddressFields(address.countryCode)\n                : type === AddressType.Shipping\n                ? getShippingAddressFields(address.countryCode)\n                : undefined,\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_max_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    addressFormValues[name] = (address && address[name]) || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalConnectAddress, PoweredByPaypalConnectLabel, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const showPayPalConnectAddressLabel = isPayPalAxoEnabled && isPayPalConnectAddress(address, paypalConnectAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalConnectAddressLabel && <PoweredByPaypalConnectLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            return { ...state, isShowingLoadingIndicator: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id);\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: HandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../ExtensionProvider';\n\nimport { CommandHandler, HandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: HandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport * as handlerFactories from './handlers';\nimport { CommandHandler } from './handlers/CommandHandler';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        await this.checkoutService.renderExtension(container, region);\n\n        this.registerHandlers(extension);\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(handlerFactories).forEach((createHandlerFactory) => {\n            const handlerFactory = createHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\nimport { isCheckoutExtensionEnabled } from './isCheckoutExtensionEnabled';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport const ExtensionProvider = ({ checkoutService, children }: ExtensionProviderProps) => {\n    const isExtensionEnabled = () =>\n        isCheckoutExtensionEnabled(checkoutService.getState().data.getConfig()?.checkoutSettings);\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch);\n\n    const extensionValues = {\n        isExtensionEnabled,\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport function isCheckoutExtensionEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n): boolean {\n    return Boolean(checkoutSettings?.features['PROJECT-5029.checkout_extension']);\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'chasepay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { LoadingOverlay } from '../ui/loading';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { isApplePayWindow } from \"../common/utility\";\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\nimport { noop } from 'lodash';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'amazonpay':\n            return (\n                <AmazonPayV2Button\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onError={onUnhandledError}\n                onClick={onWalletButtonClick}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { isApplePayWindow } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'chasepay',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaypaypalcommerce',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n];\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\n    return (methodIds).filter((methodId) => {\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    methodIds,\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {supportedMethodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n\n    if (!billingAddress || !checkout || !customer) {\n        return null;\n    }\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error' || description),\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {formFields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: requiresMarketingConsent ? [] : ['0'],\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { LoadingSpinner } from '../ui/loading';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            email: formEmail,\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p>\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={onShowLogin}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isBraintreeConnectMethod } from '@bigcommerce/checkout/paypal-connect-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onError={onUnhandledError}\n            onClick={onWalletButtonClick}\n          />;\n\n        const isLoadingGuestForm = isWalletButtonsOnTop ?\n            isContinuingAsGuest || isExecutingPaymentMethodCheckout :\n            isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !customer.isStripeLinkAuthenticated) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            executePaymentMethodCheckout,\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            if (isBraintreeConnectMethod(providerWithCustomCheckout)) {\n                await executePaymentMethodCheckout({\n                    methodId: providerWithCustomCheckout,\n                    continueWithCheckoutCallback: onSignIn,\n                    checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n                });\n            } else {\n                onSignIn();\n            }\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            executePaymentMethodCheckout,\n            createAccount = noop,\n            onAccountCreated = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        if (isBraintreeConnectMethod(providerWithCustomCheckout)) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onAccountCreated,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onAccountCreated();\n        }\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalConnectAddress, PoweredByPaypalConnectLabel, usePayPalConnectAddress } from '@bigcommerce/checkout/paypal-connect-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n}) => {\n    const { isPayPalAxoEnabled, paypalConnectAddresses } = usePayPalConnectAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n\n    const showPayPalConnectAddressLabel = isPayPalAxoEnabled && isPayPalConnectAddress(address, paypalConnectAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalConnectAddressLabel && <PoweredByPaypalConnectLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (\n        config &&\n        config.checkoutSettings.features['CHECKOUT-4936.enable_custom_item_shipping'] &&\n        cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    (checkout, customer, billingAddress, config, cart) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: customer?.isStripeLinkAuthenticated !== undefined ?? isComplete,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    (checkout, billingAddress, billingAddressFields) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    (customerStep, shippingStep, billingStep, paymentStep) => {\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n RequestOptions } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isHidingStepNumbers: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isHidingStepNumbers: true,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const removeStepNumbersFlag =\n              data.getConfig()?.checkoutSettings.features['CHECKOUT-7255.remove_checkout_step_numbers'] ??\n              false;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isHidingStepNumbers: removeStepNumbersFlag,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode }, this.handleReady);\n            } else {\n                this.handleReady();\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isHidingStepNumbers } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div id=\"checkout-page-container\" data-test=\"checkout-page-container\" className={classNames({ 'is-embedded': isEmbedded(), 'remove-checkout-step-numbers': isHidingStepNumbers })}>\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [] } = this.props;\n\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={consignments.map((consignment) => (\n                    <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                        <StaticConsignment\n                            cart={cart}\n                            compactView={consignments.length < 2}\n                            consignment={consignment}\n                        />\n                    </div>\n                ))}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <CartSummaryDrawer />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            } ,\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService}>\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isRequestError from './isRequestError';\nimport isHtmlError from './isHtmlError';\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .strict(true)\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .strict(true)\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Order): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount: shippingCostBeforeDiscount,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li key={index} data-test={`order-confirmation-mandate-text-list-item-${index}`}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import React, { FunctionComponent } from 'react';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { MandateTextComponent } from './MandateTextComponent';\nimport { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency } = config;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    isUpdatedCartSummayModal={false}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport '../../scss/App.scss';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\n                            <OrderConfirmation\n                                {...this.props}\n                                createAccount={this.createAccount}\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                embeddedStylesheet={this.embeddedStylesheet}\n                                errorLogger={this.errorLogger}\n                            />\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            consignment.selectedShippingOption &&\n            consignment.selectedShippingOption.id &&\n            // Selected option is available\n            consignment.availableShippingOptions &&\n            consignment.availableShippingOptions.filter(\n                ({ id }) => id === consignment.selectedShippingOption?.id,\n            ).length,\n    );\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n}) => {\n    return (\n        <div className=\"shippingOption shippingOption--alt\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className=\"shippingOption-desc\">\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className=\"shippingOption-price\">\n                <ShopperCurrency amount={method.cost} />\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n                testId={testId}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import React, { ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    ChasePay = 'chasepay',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    Opy = 'opy',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalConnect: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"12\" viewBox=\"0 0 70 12\" fill=\"none\">\n        <path\n            d=\"M2.75845 7.01162V3.64258H1.44776C0.64798 3.64258 0 4.38005 0 5.29085V9.99776C0 10.9086 0.64798 11.646 1.44776 11.646H8.02498C8.82476 11.646 9.47274 10.9086 9.47274 9.99776V8.65989H4.2062C3.40643 8.65989 2.75845 7.92128 2.75845 7.01162Z\"\n            fill=\"#313131\"\n        />\n        <path\n            d=\"M10.7825 0.655762H4.20533C3.40555 0.655762 2.75757 1.39323 2.75757 2.30403V3.64191H8.0241C8.82388 3.64191 9.47186 4.37938 9.47186 5.29018V8.65922H10.7825C11.5823 8.65922 12.2303 7.92174 12.2303 7.01095V2.30403C12.2303 1.39437 11.5823 0.655762 10.7825 0.655762Z\"\n            fill=\"#5B5B5B\"\n        />\n        <path\n            d=\"M8.02508 3.64258H2.75854V7.01162C2.75854 7.92242 3.40653 8.65989 4.2063 8.65989H9.47284V5.29085C9.4717 4.38005 8.82372 3.64258 8.02508 3.64258Z\"\n            fill=\"#DBDBDB\"\n        />\n        <path\n            d=\"M15.0747 5.57183C15.0747 2.61287 17.0379 0.354004 20.0682 0.354004C22.3124 0.354004 23.8689 1.50383 24.4863 3.20081C24.4999 3.24272 24.5146 3.29937 24.5146 3.34128C24.5146 3.48175 24.4024 3.56558 24.2201 3.56558H22.9298C22.7474 3.56558 22.6352 3.49535 22.5514 3.32769C22.0609 2.43049 21.1909 1.88333 20.0546 1.88333C18.0631 1.88333 16.9133 3.49648 16.9133 5.57183C16.9133 7.6619 18.1198 9.24673 20.1113 9.24673C21.303 9.24673 22.0745 8.64407 22.5661 7.8998C22.6647 7.74573 22.7768 7.6755 22.9445 7.6755H24.1645C24.3469 7.6755 24.4591 7.73214 24.4591 7.8862C24.4591 7.92812 24.4455 7.98476 24.4172 8.055C23.8145 9.47104 22.3135 10.7761 20.041 10.7761C17.0526 10.7761 15.0747 8.54551 15.0747 5.57183Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M25.2576 6.90474C25.2576 4.59037 26.7869 2.96362 29.1001 2.96362C31.4281 2.96362 32.9574 4.59037 32.9574 6.90474C32.9574 9.1772 31.4564 10.804 29.0718 10.804C26.7019 10.804 25.2576 9.16361 25.2576 6.90474ZM31.1483 6.89115C31.1483 5.43206 30.3632 4.39439 29.0729 4.39439C27.7962 4.39439 27.0112 5.43206 27.0112 6.89115C27.0112 8.39215 27.7826 9.37319 29.0729 9.37319C30.3768 9.37432 31.1483 8.39215 31.1483 6.89115Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M34.191 10.2569V3.53918C34.1775 3.32847 34.2896 3.21632 34.4992 3.21632H35.4949C35.7056 3.21632 35.8178 3.32847 35.8178 3.53918V3.66492C35.8178 3.81899 35.8042 3.97305 35.8042 4.12825C35.8042 4.14185 35.8042 4.14185 35.8178 4.14185C36.2664 3.46894 36.9823 2.97729 38.1174 2.97729C39.8008 2.97729 40.7819 4.11353 40.7819 6.00649V10.2557C40.7819 10.4664 40.6697 10.5786 40.459 10.5786H39.393C39.1823 10.5786 39.0702 10.4664 39.0702 10.2557V6.77681C39.0702 5.33245 38.719 4.40693 37.5692 4.40693C36.4046 4.40693 35.9005 5.31886 35.9005 6.46868V10.2557C35.9005 10.4664 35.7883 10.5786 35.5776 10.5786H34.5116C34.3032 10.5797 34.191 10.4676 34.191 10.2569Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M42.3959 10.2569V3.53918C42.3823 3.32847 42.4944 3.21632 42.704 3.21632H43.6998C43.9105 3.21632 44.0226 3.32847 44.0226 3.53918V3.66492C44.0226 3.81899 44.009 3.97305 44.009 4.12825C44.009 4.14185 44.009 4.14185 44.0226 4.14185C44.4712 3.46894 45.1872 2.97729 46.3223 2.97729C48.0057 2.97729 48.9867 4.11353 48.9867 6.00649V10.2557C48.9867 10.4664 48.8745 10.5786 48.6638 10.5786H47.5978C47.3871 10.5786 47.275 10.4664 47.275 10.2557V6.77681C47.275 5.33245 46.9238 4.40693 45.774 4.40693C44.6094 4.40693 44.1053 5.31886 44.1053 6.46868V10.2557C44.1053 10.4664 43.9932 10.5786 43.7825 10.5786H42.7165C42.508 10.5797 42.3959 10.4676 42.3959 10.2569Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M50.1392 6.87716C50.1392 4.63302 51.6538 2.96436 53.8979 2.96436C56.2542 2.96436 57.5026 4.71798 57.5026 6.86356V7.00403C57.5026 7.21474 57.3621 7.32689 57.1661 7.32689L51.8509 7.3133C51.963 8.51976 52.7764 9.38864 53.9693 9.38864C54.6841 9.38864 55.1893 9.12243 55.5122 8.68742C55.6243 8.54695 55.7365 8.47672 55.9053 8.47672H56.9713C57.1537 8.47672 57.2794 8.56054 57.2794 8.67269C57.2794 8.71461 57.2794 8.75652 57.1808 8.95364C56.6756 9.96412 55.5677 10.8047 53.9273 10.8047C51.6254 10.8036 50.1392 9.1768 50.1392 6.87716ZM55.7909 6.09097C55.6787 5.08162 54.9775 4.29543 53.8832 4.29543C52.8172 4.29543 52.0457 4.92642 51.9052 6.09097H55.7909Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M58.189 6.89115C58.189 4.64701 59.69 2.96362 61.976 2.96362C63.7296 2.96362 64.8795 3.91747 65.3281 5.29159C65.3417 5.33351 65.3564 5.39015 65.3564 5.43206C65.3564 5.58613 65.2306 5.65636 65.0483 5.65636H63.912C63.7296 5.65636 63.6175 5.57253 63.5337 5.40374C63.2255 4.78635 62.7339 4.39326 61.9488 4.39326C60.7152 4.39326 59.9437 5.43093 59.9437 6.8617C59.9437 8.37629 60.7152 9.38678 62.0191 9.38678C62.7622 9.38678 63.3094 9.02201 63.6175 8.46126C63.7013 8.30719 63.8135 8.22336 63.9959 8.22336H65.0199C65.2023 8.22336 65.3428 8.2936 65.3428 8.41934C65.3428 8.46125 65.3292 8.50317 65.2861 8.61532C64.8228 9.84898 63.7013 10.8028 61.9477 10.8028C59.6197 10.804 58.189 9.14888 58.189 6.89115Z\"\n            fill=\"#252525\"\n        />\n        <path\n            d=\"M66.9131 8.72776V4.4921H66.128C65.9173 4.4921 65.8052 4.37995 65.8052 4.16924V3.53825C65.8052 3.32755 65.9173 3.2154 66.128 3.2154H66.9131V1.54673C66.9131 1.33603 67.0252 1.22388 67.2359 1.22388H68.3019C68.5126 1.22388 68.6248 1.33603 68.6248 1.54673V3.2154H69.6772C69.8879 3.2154 70.0001 3.32755 70.0001 3.53825V4.16924C70.0001 4.37995 69.8879 4.4921 69.6772 4.4921H68.6248V8.46154C68.6248 9.14917 68.8355 9.37347 69.3396 9.37347C69.4801 9.37347 69.522 9.35987 69.6206 9.35987C69.8029 9.35987 69.9015 9.4437 69.9015 9.69633V10.3556C69.9015 10.7057 69.6489 10.7204 69.2558 10.7204C67.7695 10.7193 66.9131 10.2707 66.9131 8.72776Z\"\n            fill=\"#252525\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalConnect);\n","import React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { IconPayPalConnect } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPaypalConnectLabel.scss';\n\nconst PoweredByPaypalConnectLabel = () => (\n    <div className=\"powered-by-paypal-connect\">\n        <div className=\"powered-by-paypal-connect-label\">\n            <TranslatedString id=\"remote.powered_by\" />\n            <IconPayPalConnect />\n        </div>\n    </div>\n);\n\nexport default PoweredByPaypalConnectLabel;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeConnectMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeConnectMethod;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalConnectAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalConnectAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalConnectAddress));\n\nconst isPayPalConnectAddress = (address: Address, addresses: Address[]): boolean =>\n    addresses.some((paypalConnectAddress) =>\n        isEqualToPayPalConnectAddress(address, paypalConnectAddress),\n    );\n\nexport default isPayPalConnectAddress;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceConnectMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerce || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceConnectMethod;\n","import isBraintreeConnectMethod from './is-braintree-connect-method';\nimport isPayPalCommerceConnectMethod from './is-paypal-commerce-connect-method';\n\nconst isPaypalConnectMethod = (methodId?: string): boolean => {\n    return isBraintreeConnectMethod(methodId) || isPayPalCommerceConnectMethod(methodId);\n};\n\nexport default isPaypalConnectMethod;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalConnectPaymentProviderCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalConnectAcceleratedCheckoutCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalConnectPaymentProviderCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalConnectAddress from './is-paypal-connect-address';\nimport isPaypalConnectMethod from './is-paypal-connect-method';\nimport isPayPalConnectAcceleratedCheckoutCustomer from './is-paypal-connect-payment-provider-customer';\n\nconst usePayPalConnectAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getCustomer, getPaymentProviderCustomer } = checkoutState.data;\n\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n    const isPayPalAxoEnabled = isPaypalConnectMethod(providerWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalConnectPaymentProviderCustomer = isPayPalConnectAcceleratedCheckoutCustomer(\n        paymentProviderCustomer,\n    )\n        ? paymentProviderCustomer\n        : {};\n\n    const paypalConnectAddresses = paypalConnectPaymentProviderCustomer.addresses || [];\n    const bcAddresses = getCustomer()?.addresses || [];\n\n    const mergedBcAndPayPalConnectAddresses = isPayPalAxoEnabled\n        ? [\n              ...paypalConnectAddresses,\n              ...bcAddresses.filter(\n                  (address) => !isPayPalConnectAddress(address, paypalConnectAddresses),\n              ),\n          ]\n        : bcAddresses;\n\n    const shouldShowPayPalConnectLabel = !!paypalConnectAddresses.length;\n\n    return {\n        isPayPalAxoEnabled,\n        paypalConnectAddresses,\n        shouldShowPayPalConnectLabel,\n        mergedBcAndPayPalConnectAddresses,\n    };\n};\n\nexport default usePayPalConnectAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalConnectSmall: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\">\n        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#F1F1F1\" />\n        <g>\n            <g>\n                <path\n                    fill=\"#313131\"\n                    d=\"M8.6,12.9V9.5H7.3c-0.8,0-1.4,0.7-1.4,1.6v4.7c0,0.9,0.6,1.6,1.4,1.6h6.6c0.8,0,1.4-0.7,1.4-1.6v-1.3h-5.3\n                    C9.3,14.5,8.6,13.8,8.6,12.9z\"\n                />\n                <path\n                    fill=\"#5B5B5B\"\n                    d=\"M16.7,6.5h-6.6c-0.8,0-1.4,0.7-1.4,1.6v1.3h5.3c0.8,0,1.4,0.7,1.4,1.6v3.4h1.3c0.8,0,1.4-0.7,1.4-1.6V8.2\n                    C18.1,7.2,17.5,6.5,16.7,6.5z\"\n                />\n            </g>\n            <path\n                fill=\"#DBDBDB\"\n                d=\"M13.9,9.5H8.6v3.4c0,0.9,0.6,1.6,1.4,1.6h5.3v-3.4C15.4,10.2,14.7,9.5,13.9,9.5z\"\n            />\n        </g>\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalConnectSmall);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeConnectTracker","createBraintreeConnectTracker","getPayPalCommerceConnectTracker","createPayPalCommerceConnectTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","value","ExtensionContext","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","state","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","type","getBillingCountries","getShippingCountries","getBillingAddressFields","getShippingAddressFields","fields","memo","addressWithoutLocalization","usePayPalConnectAddress","isPayPalAxoEnabled","paypalConnectAddresses","isValid","isValidAddress","filter","field","custom","shouldShowProviderIcon","className","IconPayPalConnectSmall","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","values","addressFormValues","fieldName","fieldType","defaultValue","customFields","fieldValue","Date","getDefaultValue","split","year","month","day","Number","getValue","shouldSaveAddress","displayNamePrefix","checkoutState","checkout","getCheckout","payments","showPayPalConnectAddressLabel","payment","providerId","id","extensionReducer","action","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","createReloadCheckoutHandler","commandType","ExtensionCommandType","handler","loadCheckout","getState","data","createSetIframeStyleHandler","extension","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","show","handlers","loadExtensions","this","preloadExtensions","extensions","getExtensions","cartId","getCart","parentOrigin","getConfig","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","toString","head","appendChild","renderExtension","container","region","getExtensionByRegion","registerHandlers","removeListeners","removers","remover","isRegionEnabled","Boolean","handlerProps","createHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","ExtensionProvider","useReducer","extensionState","extensionValues","isExtensionEnabled","checkoutSettings","features","extensionService","ExtensionService","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","methods","join","UNSUPPORTED_METHODS","withExtension","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","window","APPLE_PAY","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","containerId","initialize","isShowingWalletButtonsOnTop","onError","onClick","noop","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","location","pathname","replace","Promise","rest","localeContext","useContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","useEffect","beautifyAmazonButton","amazonButton","shadowRoot","height","onComplete","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","config","availableMethodIds","remoteCheckoutProviders","customer","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","error","position","left","top","TranslatedString","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","Error","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","testId","variant","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","preventDefault","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","requiresMarketingConsent","Input","checked","Label","htmlFor","defaultShouldSubscribe","shouldSubscribe","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","renderField","fieldProps","legend","Legend","hidden","BasicFormField","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","changeEmailLink","body","mapErrorMessage","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","shouldEncourageSignIn","isStripeLinkAuthenticated","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","handleChangeEmail","handleShowLogin","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","cart","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","width","icon","dangerouslySetInnerHTML","__html","banners","result","promotion","banner","index","text","isUsingMultiShipping","consignments","lineItems","some","consignment","lineItemIds","hasUnassignedLineItems","compactView","selectedShippingOption","StaticAddress","PoweredByPaypalConnectLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","getLanguageService","title","ShippingOptionExpiredError","role","heading","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","physicalItems","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","shippingAddressFields","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","getPaymentStepStatus","getOrder","order","customerStep","shippingStep","billingStep","paymentStep","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","Billing","lazy","retry","CartSummary","CartSummaryDrawer","Payment","Shipping","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","isHidingStepNumbers","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","providers","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","removeStepNumbersFlag","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","ErrorLevelType","customConsole","console","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","sort","a","b","EMPTY_ARRAY","freeze","lastPathName","pop","DEFAULT_OPTIONS","count","interval","resolve","amount","currency","toCustomerCurrency","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","catch","hasProto","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","then","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","isUpdatedCartSummayModal","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","itemId","item","isNil","parentId","findLineItems","getLineItemsCount","quantity","availableShippingOptions","addedByPromotion","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","date","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","items","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","filterError","fallback","Suspense","unmountContentWhenLoading","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","element","declaration","propertyName","getPropertyValue","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","createInjectHoc","pickProps","injectedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","translatedString","parsedString","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","useCheckout","normalizeAddress","omit","addresses","paypalConnectAddress","bcAddress","isEqual","isEqualToPayPalConnectAddress","isPayPalConnectAcceleratedCheckoutCustomer","getPaymentProviderCustomer","paymentProviderCustomer","bcAddresses","mergedBcAndPayPalConnectAddresses","shouldShowPayPalConnectLabel","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","Provider","isFunction","cx","cy","r"],"sourceRoot":""}